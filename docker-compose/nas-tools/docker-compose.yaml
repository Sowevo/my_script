version: "3"
services:
  # 使用macvlan的网络,使得容器获得独立的ip
  # 方便做流量控制

  # 自动辅种
  iyuuplus:
    image: iyuucn/iyuuplus
    container_name: iyuuplus
    hostname: iyuuplus
    restart: always
    networks:
      macvlan:
        ipv4_address: 10.0.0.157
    volumes:
      # 配置文件夹
      - /share/Container/docker-volumes/iyuuplus:/IYUU/db
    environment:
      - PUID=1000  # 用户id
      - PGID=100   # 用户组id
      - TZ=Asis/Shanghai
    ports:
      - "8787:8787" # HTTP port
  # 核心服务  nas-tools
  nas-tools:
    image: jxxghp/nas-tools:latest-beta
    container_name: nas-tools
    hostname: nas-tools
    restart: always
    depends_on:
      - plex
      - iyuuplus
      - qbittorrent
    networks:
      macvlan:
        ipv4_address: 10.0.0.156
    environment:
      - TZ=Asia/Shanghai
      # 用户id
      - PUID=1000
      # 用户组id
      - PGID=100
      # 如需在启动容器时自动升级程程序请设置为true
      - NASTOOL_AUTO_UPDATE=false
      # 掩码权限，默认000，可以考虑设置为022
      - UMASK=022
      # 当你访问github网络很差时，可以考虑解释本注释
      # - REPO_URL=https://ghproxy.com/https://github.com/jxxghp/nas-tools.git
    volumes:
      # 配置文件夹
      - /share/Container/docker-volumes/nas-tools/config:/config
      # 媒体目录
      - /share:/share
    ports:
      - "3000:3000"
  xteve:
    image: dnsforge/xteve
    container_name: xteve
    hostname: xteve
    restart: always
    networks:
      macvlan:
        ipv4_address: 10.0.0.155
    volumes:
      # 配置文件夹
      - /share/Container/docker-volumes/xteve/conf:/home/xteve/conf
      # 配置文件夹
      - /share/Container/docker-volumes/xteve/guide2go:/home/xteve/guide2go/conf

  plex:
    image: linuxserver/plex
    container_name: plex
    hostname: plex
    restart: always
    depends_on:
      - xteve
    networks:
      macvlan:
        ipv4_address: 10.0.0.154
    environment:
      # 用户id
      - PUID=1000
      # 用户组id
      - PGID=100
      - TZ=Asia/Shanghai
      - VERSION=docker
    devices:
      - /dev/dri:/dev/dri
    volumes:
      # 配置文件夹
      - /share/Container/docker-volumes/plex/config:/config
      # 媒体目录
      - /share:/share

  # portainer:docker管理
  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    hostname: portainer
    restart: always
    networks:
      macvlan:
        ipv4_address: 10.0.0.152
    volumes:
      # 配置文件夹
      - /share/CACHEDEV1_DATA/Container/docker-volumes/portainer:/data
      # 媒体目录
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8000:8000"
      - "9000:9000"
  # 下载器
  qbittorrent:
    image: linuxserver/qbittorrent:4.4.5
    container_name: qbittorrent
    hostname: qbittorrent
    restart: always
    networks:
      macvlan:
        ipv4_address: 10.0.0.151
    environment:
      # 用户id
      - PUID=1000
      # 用户组id
      - PGID=100
      - TZ=Asia/Shanghai
      - WEBUI_PORT=8080 # QB webui的端口，你可以换成其他端口
    volumes:
      - /share/Container/docker-volumes/qbittorrent/config:/config
      - /share:/share
    ports:
      - "50126:50126"
      - "50126:50126/udp"
      - "8080:8080"


networks:
  macvlan:
    driver: macvlan
    driver_opts:
      parent: qvs0
    ipam:
      config:
        - subnet: 10.0.0.0/24
          gateway: 10.0.0.1